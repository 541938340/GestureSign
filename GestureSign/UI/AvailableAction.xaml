<UserControl x:Class="GestureSign.UI.AvailableAction"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GestureSign.UI"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="540">
    <UserControl.Resources>
        <ResourceDictionary>
            <local:HeaderConverter x:Key="headerConverter"></local:HeaderConverter>

            <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Key="appbar_add" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="38" Height="38" Canvas.Left="19" Canvas.Top="19" Stretch="Fill" Fill="#FF000000" Data="F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z "/>
            </Canvas>
            <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Key="appbar_page_edit" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="46.9461" Height="42" Canvas.Left="14.0539" Canvas.Top="17" Stretch="Fill" Fill="#FF000000" Data="F1 M 48,30L 55.75,30L 48,22.25L 48,30 Z M 57,33L 44,33L 44,21L 29,21L 29,31.25L 25,27.25L 25,17L 48.25,17L 61,29.75L 61,59L 25,59L 25,41.75L 29,45.75L 29,55L 57,55L 57,33 Z M 24.5417,28.5L 39.5833,43.5417L 34.0417,49.0833L 19,34.0417L 24.5417,28.5 Z M 17.8125,32.8542L 14.6458,30.314C 13.6303,29.2984 14.0262,27.1405 15.0417,26.125L 16.625,24.5417C 17.6405,23.5262 19.5678,23.1303 20.5833,24.1459L 23.3541,27.3126L 17.8125,32.8542 Z M 41.9715,52.25L 35.2292,50.2709L 40.7708,44.7292L 42.6216,51.5999L 41.9715,52.25 Z "/>
            </Canvas>
            <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Key="appbar_delete" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="27.7083" Height="35.625" Canvas.Left="24.1458" Canvas.Top="19.7917" Stretch="Fill" Fill="#FF000000" Data="F1 M 25.3333,23.75L 50.6667,23.75C 51.5411,23.75 51.8541,27.3125 51.8541,27.3125L 24.1458,27.3125C 24.1458,27.3125 24.4589,23.75 25.3333,23.75 Z M 35.625,19.7917L 40.375,19.7917C 40.8122,19.7917 41.9583,20.9378 41.9583,21.375C 41.9583,21.8122 40.8122,22.9584 40.375,22.9584L 35.625,22.9584C 35.1878,22.9584 34.0416,21.8122 34.0416,21.375C 34.0416,20.9378 35.1878,19.7917 35.625,19.7917 Z M 27.7083,28.5L 48.2916,28.5C 49.1661,28.5 49.875,29.2089 49.875,30.0834L 48.2916,53.8334C 48.2916,54.7078 47.5828,55.4167 46.7083,55.4167L 29.2917,55.4167C 28.4172,55.4167 27.7083,54.7078 27.7083,53.8334L 26.125,30.0834C 26.125,29.2089 26.8339,28.5 27.7083,28.5 Z M 30.0833,31.6667L 30.4792,52.25L 33.25,52.25L 32.8542,31.6667L 30.0833,31.6667 Z M 36.4167,31.6667L 36.4167,52.25L 39.5833,52.25L 39.5833,31.6667L 36.4167,31.6667 Z M 43.1458,31.6667L 42.75,52.25L 45.5208,52.25L 45.9167,31.6667L 43.1458,31.6667 Z "/>
            </Canvas>



            <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}" >
                <EventSetter Event="Selected" Handler="ListBoxItem_Selected"></EventSetter>
                <EventSetter Event="Unselected" Handler="ListBoxItem_Unselected"></EventSetter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter Margin="5, 0, 0, 0"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected"
                                 Value="True">
                                    <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush}" />
                                    <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="False">
                                    <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled"
                                           Value="False" />
                                        <Condition Property="IsSelected"
                                           Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush7}" />
                                    <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                           Value="True" />
                                        <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush2}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="65"/>
        </Grid.RowDefinitions>
        <ListBox x:Name="lstAvailableActions" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0" Margin="0"  SelectionChanged="lstAvailableActions_SelectionChanged" ScrollViewer.CanContentScroll="False">
            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="CopyActionMenuItem" Header="复制动作到.." FontSize="16" />
                    <Separator></Separator>
                    <MenuItem x:Name="InterceptTouchInputMenuItem" Header="屏蔽此程序触屏输入"  IsCheckable="True" FontSize="16" Loaded="InterceptTouchInputMenuItem_Loaded" Click="InterceptTouchInputMenuItem_Click" />
                    <Separator></Separator>
                    <MenuItem x:Name="ImportActionMenuItem" Header="导入动作" Click="ImportActionMenuItem_Click" FontSize="16" />
                    <MenuItem x:Name="ExportActionMenuItem" Header="导出所有动作" Click="ExportActionMenuItem_Click"  FontSize="16"/>
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Margin" Value="0,0,0,5"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander BorderBrush="#FFA4B97F"  FlowDirection="RightToLeft"  BorderThickness="0,0,0,1" IsExpanded="True">
                                            <Expander.Header>
                                                <DockPanel>
                                                    <CheckBox Click="AllActionsCheckBoxs_Click" Margin="10,0,5,0" FontWeight="Bold" FlowDirection="LeftToRight" Content="启用" DockPanel.Dock="Right"/>
                                                    <TextBlock FontWeight="Bold"  Margin="5,0,0,0" HorizontalAlignment="Center" DockPanel.Dock="Top">
                                                        <TextBlock.Text>
                                                            <MultiBinding Converter="{StaticResource headerConverter}" >
                                                                <Binding  Path="Name" Mode="OneWay"/>
                                                                <Binding  Path="ItemCount" Mode="OneWay"/>
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </DockPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter />
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListBox.GroupStyle>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True">
                    </StackPanel>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Canvas Height="95" Margin="0,5" FlowDirection="LeftToRight">
                        <!--Orientation="Horizontal"-->
                        <CheckBox Margin="5,0,10,0" IsChecked="{Binding Path=IsEnabled}" IsThreeState="False" Click="ActionCheckBox_Click" Canvas.Top="38"/>
                        <Image x:Name="GestureImage" Source="{Binding GestureThumbnail}" Height="65" Stretch="Uniform" Margin="15,5,5,5" Width="200" StretchDirection="DownOnly" VerticalAlignment="Center" HorizontalAlignment="Center" Canvas.Left="35" Canvas.Top="8" />
                        <ComboBox x:Name="availableGesturesComboBox"
                                              Visibility="Collapsed" 
                          HorizontalContentAlignment="Left"
                           HorizontalAlignment="Center"
                          VerticalContentAlignment="Center"
                           Margin="10,5,5,5"
                         VerticalAlignment="Center" BorderThickness="0" Height="80" IsEditable="False" IsReadOnly="True" Background="{x:Null}" SelectionChanged="availableGesturesComboBox_SelectionChanged" IsDropDownOpen="False" ScrollViewer.IsDeferredScrollingEnabled="True" MaxDropDownHeight="265" Canvas.Left="30" MaxWidth="280" MinWidth="250">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding Image}" Height="65" Stretch="Uniform"  StretchDirection="DownOnly" Width="200" HorizontalAlignment="Stretch" />
                                        <TextBlock TextWrapping="Wrap" Text="{Binding Name}" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            <!--<ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel IsVirtualizing="True"  VirtualizationMode="Recycling"  >
                                    </VirtualizingStackPanel>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>-->
                            <ComboBox.Resources>
                                <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                    <Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}" />
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                                    <!--<Setter Property="OverridesDefaultStyle" Value="true"/>-->
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="MinWidth" Value="50"/>
                                    <Setter Property="MinHeight" Value="32"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ComboBox">
                                                <Grid>
                                                    <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                                                        <ToggleButton.Style>
                                                            <Style  TargetType="ToggleButton">
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="ToggleButton">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition />
                                                                                </Grid.ColumnDefinitions>
                                                                                <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="0"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="1" />
                                                                                <Border
                          Grid.Column="0"
                          CornerRadius="0"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          BorderThickness="10" />
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                                                                    <Setter Property="Foreground" Value="Gray"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                                                    <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}">
                                                        <TextBox.Template>
                                                            <ControlTemplate TargetType="TextBox">
                                                                <Border x:Name="PART_ContentHost" Focusable="True" />
                                                            </ControlTemplate>
                                                        </TextBox.Template>
                                                    </TextBox>
                                                    <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                                        <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                            <Border
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="2"
                                        BorderBrush="Gray"/>
                                                            <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                                            </ScrollViewer>
                                                        </Grid>
                                                    </Popup>

                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="false">
                                                        <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                                    </Trigger>
                                                    <Trigger Property="IsGrouping" Value="true">
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                                    </Trigger>
                                                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                                        <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                                        <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEditable" Value="true">
                                                        <Setter Property="IsTabStop" Value="false"/>
                                                        <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                                                        <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>


                            </ComboBox.Resources>
                        </ComboBox>
                        <Canvas VerticalAlignment="Center" Height="55" DockPanel.Dock="Right" HorizontalAlignment="Right" Canvas.Left="330" Canvas.Top="15">
                            <TextBlock TextWrapping="NoWrap" Text="{Binding ActionName}" Margin="0,10,0,5" HorizontalAlignment="Center" VerticalAlignment="Stretch" Canvas.Top="0" Width="Auto"/>
                            <TextBlock TextWrapping="Wrap" Text="{Binding Description}" DockPanel.Dock="Top" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Canvas.Top="32" Width="150" Foreground="{StaticResource HighlightBrush}"/>
                        </Canvas>
                    </Canvas>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <!--<ListView.View>
                <GridView>
                    <GridViewColumn Header="启用">
                        <GridViewColumn.HeaderTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <CheckBox Click="AllCheckBoxs_Click" Margin="10,0,0,0"/>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold">
                                        <TextBlock.Text>
                                            <Binding/>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DockPanel>
                            </DataTemplate>
                        </GridViewColumn.HeaderTemplate>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Path=IsEnabled}" IsThreeState="False" Checked="ActionCheckBox_Checked" Unchecked="ActionCheckBox_Unchecked" Tag="{Binding ActionName}"  />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="手势">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <DataTemplate.Triggers>
                                </DataTemplate.Triggers>
                                <Image Source="{Binding GestureThumbnail}" Height="65" Stretch="None" Margin="5" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="名称及动作">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding ActionName}" Margin="0,0,0,5"/>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding Description}"/>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>-->
        </ListBox>
        <Button x:Name="btnAddAction"
                    Style="{DynamicResource MetroCircleButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="50" Width="50" Margin="0,0,120,10" Click="btnAddAction_Click" Grid.Row="1" 
                        >
            <Rectangle Width="20"
                           Height="20">
                <Rectangle.Fill>
                    <VisualBrush Visual="{StaticResource appbar_add}" />
                </Rectangle.Fill>
            </Rectangle>
        </Button>
        <Button x:Name="cmdEdit"
                    Style="{DynamicResource MetroCircleButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="50" Width="50" Click="cmdEditAction_Click" Margin="0,0,65,10" Grid.Row="1" 
                        >
            <Rectangle Width="20"
                           Height="20"
                        Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Fill"
                                     Visual="{DynamicResource appbar_page_edit}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
        <Button x:Name="cmdDelete"
                    Style="{DynamicResource MetroCircleButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="50" Width="50" Margin="0,0,10,10" Click="cmdDeleteAction_Click" Grid.Row="1" >
            <Rectangle Width="18"
                           Height="20"
                                    Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Visual="{StaticResource appbar_delete}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
    </Grid>
</UserControl>

<controls:MetroWindow x:Class="GestureSign.UI.ApplicationDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:local="clr-namespace:GestureSign.UI"
                      xmlns:applications="clr-namespace:GestureSign.Common.Applications;assembly=GestureSign.Common"
                      BorderBrush="{StaticResource AccentColorBrush}"
        Title="添加动作" Height="550" Width="700" WindowStyle="ToolWindow" ResizeMode="CanMinimize" Loaded="MetroWindow_Loaded" SizeToContent="Manual" Closed="MetroWindow_Closed" Icon="/GestureSign;component/Resources/normal.ico" BorderThickness="1" ShowIconOnTitleBar="False" WindowStartupLocation="CenterScreen">
    <controls:MetroWindow.Resources>
        <ResourceDictionary>
            <Style x:Key="ShowCanvasStyle" TargetType="{x:Type Canvas}">
                <Style.Triggers>
                    <Trigger Property="Canvas.Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetProperty="Opacity">
                                    <DoubleAnimation From="0" To="1" Duration="00:00:00.2" BeginTime="00:00:00"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Canvas x:Key="appbar_chevron_right" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="25.3333" Height="28.5" Canvas.Left="25.1849" Canvas.Top="23.3542" Stretch="Fill" Fill="#FF000000" Data="F1 M 39.8307,37.6042L 36.6641,34.4375L 25.1849,23.3542L 35.4766,23.3542L 50.5182,37.6042L 35.4766,51.8542L 25.1849,51.8542L 36.6641,40.7708L 39.8307,37.6042 Z "/>
            </Canvas>
            <local:SelectedItemConverter x:Key="selectedItemConverter"></local:SelectedItemConverter>
            <local:MatchUsingToStringConverter x:Key="matchUsingToStringConverter"></local:MatchUsingToStringConverter>
            <local:InterceptTouchInputBoolConverter x:Key="interceptTouchInputBoolConverter"></local:InterceptTouchInputBoolConverter>
            <local:ListviewItem2TextBoxConverter x:Key="ListviewItem2TextBoxConverter"></local:ListviewItem2TextBoxConverter>
            <local:Bool2VisibilityConverter x:Key="Bool2VisibilityConverter"></local:Bool2VisibilityConverter>
            <local:AllowSingleBoolConverter x:Key="AllowSingleBoolConverter"></local:AllowSingleBoolConverter>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout Name="MessageFlyout"
                             Theme="Accent"
                             Position="Bottom"
                             CloseButtonVisibility="Collapsed"
                             IsPinned="False"
                             Height="75">
                <TextBlock Name="MessageFlyoutText"
                    VerticalAlignment="Center"
                           HorizontalAlignment="Center" FontSize="16" />
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <Canvas Height="520">
        <Popup x:Name="RunningApplicationsPopup" Width="358" Height="520"  
        	Opened="RunningApplicationsPopup_Opened"
        	StaysOpen="False"   
        	IsOpen="{Binding IsChecked, ElementName=btnExistingApplication, Mode=TwoWay}"   
        	AllowsTransparency="True"  
        	PopupAnimation="Fade"
        	Placement="RelativePoint" PlacementRectangle="342,0,0,0">
            <ListView x:Name="alvRunningApplications" BorderBrush="{StaticResource AccentColorBrush}" BorderThickness="3">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="图标" Width="55">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding ApplicationIcon}" Height="35" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="程序文件名及标题" Width="300">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock  Text="{Binding WindowFilename}" Margin="0,5,0,2"/>
                                        <TextBlock  Text="{Binding WindowTitle}"  Foreground="{StaticResource AccentColorBrush}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </Popup>
        <StackPanel Canvas.Left="10" Canvas.Top="10" Width="330" Height="370">

            <TextBlock TextWrapping="Wrap" Text="选择要控制的程序" FontSize="24"/>

            <RadioButton Margin="0, 10, 0, 0" Content="保存的程序" x:Name="ExistingApplicationRadioButton"
                         GroupName="1" FontSize="18" IsChecked="True" />
            <Canvas x:Name="ExistingApplicationCanvas" Style="{StaticResource ShowCanvasStyle}" Height="165" Visibility="{Binding IsChecked, Converter={StaticResource Bool2VisibilityConverter}, ElementName=ExistingApplicationRadioButton, Mode=OneWay}">
                <ComboBox x:Name="cmbExistingApplication" DisplayMemberPath="Name" HorizontalAlignment="Left" VerticalAlignment="Top" Width="193" Canvas.Left="127" Canvas.Top="10" FontSize="14"/>
                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="选择已有程序" VerticalAlignment="Top" Canvas.Left="10" Canvas.Top="17" FontSize="14" FontWeight="Bold"/>
                <TextBlock Canvas.Left="66" TextWrapping="Wrap" Text="分组" Canvas.Top="50" FontSize="14" FontWeight="Bold"/>
                <TextBlock Text="{Binding SelectedItem.Group, ElementName=cmbExistingApplication}" Canvas.Left="127" TextWrapping="Wrap" Canvas.Top="50" FontSize="14"/>
                <TextBlock Canvas.Left="38" TextWrapping="Wrap" Text="匹配类型" Canvas.Top="82" FontSize="14" FontWeight="Bold"/>
                <TextBlock Canvas.Left="38" TextWrapping="Wrap" Text="匹配字段" Canvas.Top="115" FontSize="14" FontWeight="Bold"/>
                <TextBlock Text="{Binding SelectedItem.MatchUsing, Converter={StaticResource matchUsingToStringConverter}, ElementName=cmbExistingApplication}" Canvas.Left="127" TextWrapping="Wrap" Canvas.Top="82" FontSize="14" Width="193"/>
                <TextBlock Text="{Binding SelectedItem.MatchString, ElementName=cmbExistingApplication}" Canvas.Left="127" TextWrapping="Wrap" Canvas.Top="115" FontSize="14" Width="193"/>
            </Canvas>
            <RadioButton x:Name="NewApplicationRadioButton"
                Margin="0, 10, 0, 0"
                         Content="新建程序"
                         GroupName="1" FontSize="18"/>
            <Canvas x:Name="NewApplicationCanvas" Style="{StaticResource ShowCanvasStyle}" Height="253" Visibility="{Binding IsChecked, Converter={StaticResource Bool2VisibilityConverter}, ElementName=NewApplicationRadioButton, Mode=OneWay}">
                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="分组名称" VerticalAlignment="Top" FontSize="14" FontWeight="Bold" Height="18" Canvas.Left="24" Canvas.Top="17"/>
                <ComboBox x:Name="GroupComboBox" Canvas.Left="103" Canvas.Top="10" Width="217" IsEditable="True" />
                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="匹配类型" VerticalAlignment="Top" FontSize="14" FontWeight="Bold" Height="18" Width="56" Canvas.Left="24" Canvas.Top="54"/>
                <ComboBox x:Name="cmbMatchUsingCustom" HorizontalAlignment="Left" VerticalAlignment="Top" Width="217" SelectionChanged="cmbMatchUsingCustom_SelectionChanged" FontSize="14" FontFamily="Microsoft YaHei UI" Height="26" Canvas.Left="103" Canvas.Top="47"/>
                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="匹配字符串" VerticalAlignment="Top" FontSize="14" FontWeight="Bold" Height="18" Width="70" Canvas.Left="10" Canvas.Top="92"/>
                <TextBox x:Name="txtMatchString" TextWrapping="Wrap" Width="217" FontSize="14" FontFamily="Microsoft YaHei UI" MaxLines="3" MaxLength="100" Canvas.Left="103" Canvas.Top="89">
                    <MultiBinding Converter="{StaticResource ListviewItem2TextBoxConverter}" Mode="OneWay">
                        <Binding ElementName="cmbMatchUsingCustom" Path="SelectedItem" Mode="OneWay"/>
                        <Binding Path="SelectedItem" ElementName="alvRunningApplications" Mode="OneWay"/>
                    </MultiBinding>
                </TextBox>
                <CheckBox x:Name="chkRegex" Content="使用正则表达式" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Microsoft YaHei UI" Grid.Row="1" Canvas.Left="10" Canvas.Top="168" FontSize="14"/>
                <Button x:Name="cmdBrowse" Content="浏览文件" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold" FontFamily="Microsoft YaHei UI" Click="cmdBrowse_Click" FontSize="14"
                        Canvas.Left="244" Canvas.Top="163" />
                <TextBlock TextWrapping="Wrap" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontSize="14"
                           Width="216" Canvas.Left="51" Canvas.Top="207"><Run Text="将左侧图标拖至想"/><Run Text="控制"/><Run Text="的程序窗口上"/><Run Text="或点击右侧按钮并选择程序"/></TextBlock>

                <local:Crosshair x:Name="chCrosshair" HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="36" Width="36" Canvas.Left="10" Canvas.Top="203"/>
                <ToggleButton x:Name="btnExistingApplication"
                    Style="{DynamicResource MetroCircleToggleButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="50" Width="50" Canvas.Left="270" Canvas.Top="196" IsTabStop="False" 
                        >
                    <Rectangle Width="20"
                           Height="20">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_chevron_right}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </ToggleButton>
            </Canvas>
        </StackPanel>
        <StackPanel Canvas.Left="356" Canvas.Top="10" Width="328">
            <TextBlock Text="选择手势" FontSize="24"/>
            <ComboBox x:Name="availableGesturesComboBox"
                          HorizontalContentAlignment="Left"
                           HorizontalAlignment="Center"
                          VerticalContentAlignment="Center"
                           Margin="10,5,5,5"
                         VerticalAlignment="Center" BorderThickness="0" Height="80" IsEditable="False" IsReadOnly="True"  IsDropDownOpen="False" ScrollViewer.IsDeferredScrollingEnabled="True" MaxDropDownHeight="265" Canvas.Left="30" MaxWidth="300" Width="280">
                <!--<ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel IsVirtualizing="True"  VirtualizationMode="Recycling"  >
                                    </VirtualizingStackPanel>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>-->
                <ComboBox.Resources>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />
                        <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}" />
                        <Setter Property="Background" Value="White" />
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <!--<Setter Property="OverridesDefaultStyle" Value="true"/>-->
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="MinWidth" Value="50"/>
                        <Setter Property="MinHeight" Value="32"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                    <Grid>
                                        <ToggleButton
                                x:Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                                            <ToggleButton.Style>
                                                <Style  TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="0"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="1" />
                                                                    <Border
                          Grid.Column="0"
                          CornerRadius="0"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          BorderThickness="10" />
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                                                        <Setter Property="Foreground" Value="Gray"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <ContentPresenter
                                x:Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                                        <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}">
                                            <TextBox.Template>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <Border x:Name="PART_ContentHost" Focusable="True" />
                                                </ControlTemplate>
                                            </TextBox.Template>
                                        </TextBox>
                                        <Popup
                                x:Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                            <Grid
                                  x:Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                <Border
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="2"
                                        BorderBrush="Gray"/>
                                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Popup>

                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                        </Trigger>
                                        <Trigger Property="IsGrouping" Value="true">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                        </Trigger>
                                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                                        </Trigger>
                                        <Trigger Property="IsEditable" Value="true">
                                            <Setter Property="IsTabStop" Value="false"/>
                                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                </ComboBox.Resources>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding Image}" Height="65" Stretch="Uniform"  StretchDirection="DownOnly" Width="200" HorizontalAlignment="Stretch" />
                            <TextBlock TextWrapping="Wrap" Text="{Binding Name}" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBlock Text="选择想执行的动作" FontSize="24"/>
            <StackPanel Margin="0,5" Orientation="Vertical">
                <ComboBox x:Name="cmbPlugins"
        		Margin="10"
        		DisplayMemberPath="DisplayText" SelectionChanged="cmbPlugins_SelectionChanged" FontSize="14" FontFamily="Microsoft YaHei UI" MaxDropDownHeight="300" />
                <ContentControl x:Name="SettingsContent"  Margin="5,10,5,5"/>
            </StackPanel>
        </StackPanel>
        <Button x:Name="cmdCancel"
        	Content="取消"
        	Style="{DynamicResource SquareButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="95" Canvas.Left="222" Canvas.Top="480" FontFamily="Microsoft YaHei UI" Click="cmdCancel_Click" />
        <Button x:Name="cmdDone"
        	Content="保存"
        	Style="{DynamicResource SquareButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="cmdDone_Click" Width="95" Canvas.Left="388" Canvas.Top="480" IsDefault="True"  />
        <Canvas Height="58" Canvas.Top="408" Width="674" Canvas.Left="10">
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="程序名称" VerticalAlignment="Top" Canvas.Left="10" Canvas.Top="14" FontSize="14" FontWeight="Bold"/>
            <TextBox x:Name="txtApplicationName" TextWrapping="Wrap" 
            	controls:TextBoxHelper.Watermark="请输入要控制的程序名称" Canvas.Left="71" Canvas.Top="10" Width="252" FontSize="14" MaxLines="3" MaxLength="80" FontFamily="Microsoft YaHei UI">
                <MultiBinding Converter="{StaticResource selectedItemConverter}" Mode="OneWay">
                    <Binding ElementName="ExistingApplicationRadioButton" Path="IsChecked" Mode="OneWay" />
                    <Binding ElementName="cmbExistingApplication" Path="SelectedItem" Mode="OneWay"/>
                    <Binding ElementName="alvRunningApplications" Path="SelectedItem" Mode="OneWay"/>
                </MultiBinding>
            </TextBox>
            <TextBlock TextWrapping="Wrap" Text="动作名称" FontWeight="Bold" FontSize="14" Canvas.Left="363" Canvas.Top="14"/>
            <TextBox x:Name="TxtActionName"
            	controls:TextBoxHelper.Watermark="请输入动作名称"
            	 Canvas.Left="424" Canvas.Top="10" Width="240" FontSize="14" FontFamily="Microsoft YaHei UI" MaxLines="3" MaxLength="80" />
        </Canvas>
        <CheckBox x:Name="InterceptTouchInputCheckBox" IsChecked="{Binding SelectedItem, Converter={StaticResource interceptTouchInputBoolConverter}, ElementName=cmbExistingApplication, Mode=OneWay}" 
                  IsEnabled="{Binding IsChecked, ElementName= NewApplicationRadioButton, Mode=OneWay}"
                  Content="屏蔽此程序触屏输入" Canvas.Left="10" Canvas.Top="385" FontSize="14"/>
        <CheckBox x:Name="AllowSingleCheckBox" Content="允许单指手势" Canvas.Left="232" Canvas.Top="385"   IsEnabled="{Binding IsChecked, ElementName= NewApplicationRadioButton, Mode=OneWay}" IsChecked="{Binding SelectedItem, Converter={StaticResource AllowSingleBoolConverter}, ElementName=cmbExistingApplication, Mode=OneWay}" FontSize="14"/>
        <!--<Line Canvas.Top="0" Stroke="{StaticResource AccentColorBrush}" Y2="444" Canvas.Left="350" Opacity="0.5" StrokeThickness="2"/>-->
    </Canvas>
</controls:MetroWindow>

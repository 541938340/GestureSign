<UserControl x:Class="GestureSign.ControlPanel.MainWindowControls.AvailableActions"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:localization="clr-namespace:GestureSign.Common.Localization;assembly=GestureSign.Common"
             xmlns:converters="clr-namespace:GestureSign.ControlPanel.Converters"
             xmlns:viewModel="clr-namespace:GestureSign.ControlPanel.ViewModel"
             xmlns:applications="clr-namespace:GestureSign.Common.Applications;assembly=GestureSign.Common"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             mc:Ignorable="d"
             d:DesignHeight="400"
             d:DesignWidth="540"
             Initialized="UserControl_Initialized">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:ApplicationListHeaderConverter x:Key="ApplicationListHeaderConverter"></converters:ApplicationListHeaderConverter>
            <converters:VisibilityConverter x:Key="VisibilityConverter"></converters:VisibilityConverter>
            <converters:Application2VisibilityConverter x:Key="Application2VisibilityConverter" />
            <Canvas x:Key="Plus"
                    Width="24"
                    Height="24">
                <Path Data="M490.313583 952.700117c-2.921539 0-5.685489-2.76395-5.685489-5.684466L484.628094 538.349111 75.959507 538.349111c-2.921539 0-5.683443-2.761903-5.683443-5.684466l0-43.367717c0-2.920516 2.761903-5.683443 5.683443-5.683443l408.667563 0L484.627071 74.93876c0-2.922563 2.76395-5.685489 5.685489-5.685489l43.36567 0c2.921539 0 5.686513 2.762927 5.686513 5.685489l0 408.674727 408.671657 0c2.922563 0 5.685489 2.762927 5.685489 5.683443l0 43.367717c0 2.921539-2.765997 5.684466-5.691629 5.684466L539.365766 538.349111l0 408.66654c0 2.920516-2.76395 5.684466-5.686513 5.684466L490.313583 952.700117z"
                      Fill="Black" />
            </Canvas>
            <Canvas x:Key="appbar_page_edit"
                    Width="76"
                    Height="76"
                    Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="46.9461"
                      Height="42"
                      Canvas.Left="14.0539"
                      Canvas.Top="17"
                      Stretch="Fill"
                      Fill="#FF000000"
                      Data="F1 M 48,30L 55.75,30L 48,22.25L 48,30 Z M 57,33L 44,33L 44,21L 29,21L 29,31.25L 25,27.25L 25,17L 48.25,17L 61,29.75L 61,59L 25,59L 25,41.75L 29,45.75L 29,55L 57,55L 57,33 Z M 24.5417,28.5L 39.5833,43.5417L 34.0417,49.0833L 19,34.0417L 24.5417,28.5 Z M 17.8125,32.8542L 14.6458,30.314C 13.6303,29.2984 14.0262,27.1405 15.0417,26.125L 16.625,24.5417C 17.6405,23.5262 19.5678,23.1303 20.5833,24.1459L 23.3541,27.3126L 17.8125,32.8542 Z M 41.9715,52.25L 35.2292,50.2709L 40.7708,44.7292L 42.6216,51.5999L 41.9715,52.25 Z " />
            </Canvas>
            <Canvas x:Key="appbar_delete"
                    Width="76"
                    Height="76"
                    Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="27.7083"
                      Height="35.625"
                      Canvas.Left="24.1458"
                      Canvas.Top="19.7917"
                      Stretch="Fill"
                      Fill="#FF000000"
                      Data="F1 M 25.3333,23.75L 50.6667,23.75C 51.5411,23.75 51.8541,27.3125 51.8541,27.3125L 24.1458,27.3125C 24.1458,27.3125 24.4589,23.75 25.3333,23.75 Z M 35.625,19.7917L 40.375,19.7917C 40.8122,19.7917 41.9583,20.9378 41.9583,21.375C 41.9583,21.8122 40.8122,22.9584 40.375,22.9584L 35.625,22.9584C 35.1878,22.9584 34.0416,21.8122 34.0416,21.375C 34.0416,20.9378 35.1878,19.7917 35.625,19.7917 Z M 27.7083,28.5L 48.2916,28.5C 49.1661,28.5 49.875,29.2089 49.875,30.0834L 48.2916,53.8334C 48.2916,54.7078 47.5828,55.4167 46.7083,55.4167L 29.2917,55.4167C 28.4172,55.4167 27.7083,54.7078 27.7083,53.8334L 26.125,30.0834C 26.125,29.2089 26.8339,28.5 27.7083,28.5 Z M 30.0833,31.6667L 30.4792,52.25L 33.25,52.25L 32.8542,31.6667L 30.0833,31.6667 Z M 36.4167,31.6667L 36.4167,52.25L 39.5833,52.25L 39.5833,31.6667L 36.4167,31.6667 Z M 43.1458,31.6667L 42.75,52.25L 45.5208,52.25L 45.9167,31.6667L 43.1458,31.6667 Z " />
            </Canvas>
            <Canvas x:Key="Chevron-Up"
                    Width="24"
                    Height="24">
                <Path Data="M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z"
                      Fill="Black" />
            </Canvas>
            <Canvas x:Key="Chevron-Down"
                    Width="24"
                    Height="24">
                <Path Data="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
                      Fill="Black" />
            </Canvas>

            <Style TargetType="ListBoxItem"
                   BasedOn="{StaticResource {x:Type ListBoxItem}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter Margin="5, 0, 0, 0"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{DynamicResource AccentColorBrush4}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource AccentSelectedColorBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource GrayBrush7}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{DynamicResource GrayBrush7}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource AccentSelectedColorBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{DynamicResource AccentColorBrush3}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ObjectDataProvider ObjectType="{x:Type viewModel:GestureItemProvider}"
                                x:Key="GestureItemProvider">
            </ObjectDataProvider>
            <ObjectDataProvider ObjectType="{x:Type viewModel:ApplicationItemProvider}"
                                x:Key="ApplicationItemProvider">
            </ObjectDataProvider>
            <CollectionViewSource x:Key="ActionsViewSource"
                                  Source="{Binding ActionInfos}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="GestureName" />
                </CollectionViewSource.GroupDescriptions>
                <CollectionViewSource.SortDescriptions>
                    <componentModel:SortDescription PropertyName="GestureName"
                                                    Direction="Ascending" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            <CollectionViewSource x:Key="ApplicationViewSource"
                                  Source="{Binding Source={StaticResource ApplicationItemProvider},Path=ApplicationItems}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="Group" />
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid SnapsToDevicePixels="True"
          UseLayoutRounding="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="65" />
        </Grid.RowDefinitions>
        <ListBox x:Name="lstAvailableApplication"
                 ItemsSource="{Binding Source={StaticResource ApplicationViewSource}}"
                 ScrollViewer.CanContentScroll="False"
                 ScrollViewer.VerticalScrollBarVisibility="Hidden"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 SelectionChanged="lstAvailableApplication_SelectionChanged"
                 ContextMenuOpening="lstAvailableApplication_ContextMenuOpening"
                 Grid.Row="0"
                 Grid.Column="0">
            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem  x:Name="PasteActionMenuItem2"
                               Header="{localization:LocalisedText Action.PasteAction}"
                               FontSize="16"
                               Click="PasteActionMenuItem_Click" />
                    <Separator />
                    <MenuItem  x:Name="DeleteMenuItem"
                               Header="{localization:LocalisedText Action.Delete}"
                               FontSize="16"
                               Click="DeleteMenuItem_Click" />
                    <MenuItem  x:Name="EditMenuItem"
                               Header="{localization:LocalisedText Action.Edit}"
                               FontSize="16"
                               Click="EditApplication_Click" />
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True"
                                                  Padding="0"
                                                  BorderThickness="0">
                                            <Expander.Header>
                                                <DockPanel>
                                                    <TextBlock Foreground="{StaticResource AccentSelectedColorBrush}"
                                                               Margin="5,0,0,0"
                                                               HorizontalAlignment="Center"
                                                               DockPanel.Dock="Top">
                                                        <TextBlock.Text>
                                                            <MultiBinding Converter="{StaticResource ApplicationListHeaderConverter}">
                                                                <Binding  Path="Name"
                                                                          Mode="OneWay" />
                                                                <Binding  Path="ItemCount"
                                                                          Mode="OneWay" />
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </DockPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter />
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListBox.GroupStyle>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True">
                    </StackPanel>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Height="50">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="23" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Name}"
                                   VerticalAlignment="Center"></TextBlock>
                        <Button Click="EditApplication_Click"
                                Grid.Column="1"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Right"
                                Margin="0,0,5,0"
                                Width="18">
                            <Button.Template>
                                <ControlTemplate>
                                    <Rectangle Fill="{StaticResource AccentColorBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform"
                                                         Visual="{StaticResource appbar_page_edit}" />
                                        </Rectangle.OpacityMask>
                                        <Rectangle.Visibility>
                                            <MultiBinding Converter="{StaticResource Application2VisibilityConverter}">
                                                <Binding  Path="DataContext"
                                                          RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}"
                                                          Mode="OneWay" />
                                                <Binding  Path="IsSelected"
                                                          RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}"
                                                          Mode="OneWay" />
                                            </MultiBinding>
                                        </Rectangle.Visibility>
                                    </Rectangle>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}"
                       BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                    <Setter Property="VerticalContentAlignment"
                            Value="Stretch" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        <Grid Grid.Row="0"
              Grid.Column="1"
              Background="{StaticResource AccentColorBrush}"
              Height="27"
              VerticalAlignment="Top">
            <TextBlock Foreground="{StaticResource AccentSelectedColorBrush}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center">
                <Run Text="{Binding ElementName=lstAvailableApplication,Path=SelectedItem.(applications:IApplication.Name),Mode=OneWay}" />
                <Run Text="{Binding ElementName=lstAvailableActions,Path=Items.Count,Mode=OneWay,StringFormat={localization:LocalisedText Action.ActionCount}}" />
            </TextBlock>
            <CheckBox x:Name="ToggleAllActionsCheckBox"
                      IsEnabled="False"
                      Click="ToggleAllActionsCheckBox_Click"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Right"
                      Margin="0,0,1,0" />
        </Grid>
        <!--VirtualizingPanel.IsVirtualizingWhenGrouping="True"-->
        <ListBox x:Name="lstAvailableActions"
                 ItemsSource="{Binding Source={StaticResource ActionsViewSource}}"
                 ContextMenuOpening="LstAvailableActions_OnContextMenuOpening"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 SelectionChanged="lstAvailableActions_SelectionChanged"
                 ScrollViewer.CanContentScroll="False"
                 Grid.Row="0"
                 Grid.Column="1"
                 BorderBrush="{StaticResource AccentColorBrush}"
                 Margin="0,27,0,0">
            <ListBox.Resources>
                <ControlTemplate x:Key="ExpanderButton"
                                 TargetType="{x:Type ToggleButton}">
                    <Border x:Name="ExpanderButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="HeaderContent"
                                          ContentSource="Content" />
                    </Border>
                </ControlTemplate>

                <Style TargetType="{x:Type ComboBox}"
                       BasedOn="{StaticResource {x:Type ComboBox}}">
                    <Setter Property="Foreground"
                            Value="{StaticResource AccentSelectedColorBrush}" />
                    <Setter Property="BorderBrush"
                            Value="{StaticResource HighlightBrush}" />
                    <Setter Property="Background"
                            Value="White" />
                    <Setter Property="SnapsToDevicePixels"
                            Value="true" />
                    <!--<Setter Property="OverridesDefaultStyle" Value="true"/>-->
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                            Value="Auto" />
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                            Value="Auto" />
                    <Setter Property="ScrollViewer.CanContentScroll"
                            Value="False" />
                    <Setter Property="FontWeight"
                            Value="Bold" />
                    <Setter Property="MinWidth"
                            Value="50" />
                    <Setter Property="MinHeight"
                            Value="32" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBox">
                                <Grid>
                                    <ToggleButton Name="ToggleButton"
                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                  Background="{TemplateBinding Background}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  Focusable="false"
                                                  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                                  ClickMode="Press">
                                        <ToggleButton.Style>
                                            <Style  TargetType="ToggleButton">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition />
                                                                </Grid.ColumnDefinitions>
                                                                <Border x:Name="Border"
                                                                        Grid.ColumnSpan="2"
                                                                        CornerRadius="0"
                                                                        Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="1,1,1,1" />
                                                                <Border Grid.Column="0"
                                                                        CornerRadius="0"
                                                                        Background="Transparent"
                                                                        BorderBrush="Transparent"
                                                                        BorderThickness="10" />
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsEnabled"
                                                                         Value="False">
                                                                    <Setter TargetName="Border"
                                                                            Property="BorderBrush"
                                                                            Value="Transparent" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <ContentPresenter Name="ContentSite"
                                                      IsHitTestVisible="False"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      Margin="0,0,10,0" />
                                    <TextBox x:Name="PART_EditableTextBox"
                                             Style="{x:Null}"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Focusable="True"
                                             Visibility="Collapsed"
                                             IsReadOnly="{TemplateBinding IsReadOnly}">
                                        <TextBox.Template>
                                            <ControlTemplate TargetType="TextBox">
                                                <Border x:Name="PART_ContentHost"
                                                        Focusable="True" />
                                            </ControlTemplate>
                                        </TextBox.Template>
                                    </TextBox>
                                    <Popup Name="Popup"
                                           Placement="Bottom"
                                           IsOpen="{TemplateBinding IsDropDownOpen}"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           PopupAnimation="Slide">
                                        <Grid Name="DropDown"
                                              SnapsToDevicePixels="True"
                                              MinWidth="{TemplateBinding ActualWidth}"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                            <Border x:Name="DropDownBorder"
                                                    Background="White"
                                                    BorderThickness="2"
                                                    BorderBrush="Gray" />
                                            <ScrollViewer Margin="4,6,4,6"
                                                          SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True"
                                                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Grid>
                                    </Popup>

                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasItems"
                                             Value="false">
                                        <Setter TargetName="DropDownBorder"
                                                Property="MinHeight"
                                                Value="95" />
                                    </Trigger>
                                    <Trigger Property="IsGrouping"
                                             Value="true">
                                        <Setter Property="ScrollViewer.CanContentScroll"
                                                Value="false" />
                                    </Trigger>
                                    <Trigger SourceName="Popup"
                                             Property="Popup.AllowsTransparency"
                                             Value="true">
                                        <Setter TargetName="DropDownBorder"
                                                Property="CornerRadius"
                                                Value="0" />
                                        <Setter TargetName="DropDownBorder"
                                                Property="Margin"
                                                Value="0,2,0,0" />
                                    </Trigger>
                                    <Trigger Property="IsEditable"
                                             Value="true">
                                        <Setter Property="IsTabStop"
                                                Value="false" />
                                        <Setter TargetName="PART_EditableTextBox"
                                                Property="Visibility"
                                                Value="Visible" />
                                        <Setter TargetName="ContentSite"
                                                Property="Visibility"
                                                Value="Hidden" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="ShowBorderStyle"
                       TargetType="{x:Type Border}">
                    <Style.Triggers>
                        <Trigger Property="Border.Visibility"
                                 Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation From="0"
                                                         To="1"
                                                         Duration="00:00:00.2"
                                                         BeginTime="00:00:00" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Resources>
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander x:Name="GestureExpander"
                                                  IsExpanded="True"
                                                  ExpandDirection="Right"
                                                  Padding="0"
                                                  Margin="0,0,0,5">
                                            <Expander.Template>
                                                <ControlTemplate TargetType="{x:Type Expander}">
                                                    <DockPanel>
                                                        <Border x:Name="HeaderSite"
                                                                BorderThickness="1,1,1,1"
                                                                BorderBrush="{StaticResource AccentColorBrush}">
                                                            <ToggleButton x:Name="ExpanderButton"
                                                                          DockPanel.Dock="Left"
                                                                          Content="{TemplateBinding Header}"
                                                                          IsChecked="{Binding Path=IsExpanded,                                               
                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                                          OverridesDefaultStyle="True"
                                                                          Template="{StaticResource ExpanderButton}"
                                                                          Padding="0"
                                                                          BorderThickness="0"
                                                                          Background="{StaticResource GrayBrush10}" />
                                                        </Border>
                                                        <Border x:Name="ExpanderSite"
                                                                Style="{StaticResource ShowBorderStyle}"
                                                                BorderThickness="0,1,1,1"
                                                                BorderBrush="{StaticResource AccentColorBrush}"
                                                                Visibility="Collapsed">
                                                            <ContentPresenter x:Name="ExpanderContent"
                                                                              DockPanel.Dock="Bottom" />
                                                        </Border>
                                                    </DockPanel>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsExpanded"
                                                                 Value="True">
                                                            <Setter TargetName="ExpanderSite"
                                                                    Property="Visibility"
                                                                    Value="Visible" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Expander.Template>
                                            <Expander.Header>
                                                <StackPanel>
                                                    <ComboBox x:Name="availableGesturesComboBox"
                                                              ItemsSource="{Binding Source={StaticResource GestureItemProvider},Path=GestureItems}"
                                                              IsEnabled="{Binding  ElementName=GestureExpander,Path=IsExpanded}"
                                                              HorizontalContentAlignment="Left"
                                                              HorizontalAlignment="Center"
                                                              VerticalContentAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              Width="210"
                                                              BorderThickness="0"
                                                              Height="85"
                                                              IsEditable="False"
                                                              IsReadOnly="True"
                                                              Background="{x:Null}"
                                                              SelectionChanged="availableGesturesComboBox_SelectionChanged"
                                                              IsDropDownOpen="False"
                                                              ScrollViewer.IsDeferredScrollingEnabled="True"
                                                              MaxDropDownHeight="512"
                                                              MaxWidth="280"
                                                              MinWidth="210"
                                                              Loaded="availableGesturesComboBox_Loaded"
                                                              Margin="0">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <Image Source="{Binding Image}"
                                                                           Height="65"
                                                                           Stretch="Uniform"
                                                                           StretchDirection="DownOnly"
                                                                           Width="200"
                                                                           HorizontalAlignment="Stretch" />
                                                                    <TextBlock TextWrapping="Wrap"
                                                                               Text="{Binding Name}"
                                                                               Margin="0"
                                                                               VerticalAlignment="Center"
                                                                               HorizontalAlignment="Stretch" />
                                                                </StackPanel>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                                    <TextBlock Text="{Binding Name}"
                                                               Margin="0,-48.5,0,0"
                                                               Visibility="{Binding ElementName=availableGesturesComboBox,Path=SelectedIndex,Converter={StaticResource VisibilityConverter},Mode=OneWay}"
                                                               HorizontalAlignment="Center"
                                                               FontWeight="Bold"
                                                               IsHitTestVisible="False" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter />
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListBox.GroupStyle>
            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem  x:Name="CutActionMenuItem"
                               Header="{localization:LocalisedText Action.CutAction}"
                               FontSize="16"
                               Click="CutActionMenuItem_Click" />
                    <MenuItem  x:Name="CopyActionMenuItem"
                               Header="{localization:LocalisedText Action.CopyAction}"
                               FontSize="16"
                               Click="CopyActionMenuItem_Click" />
                    <MenuItem  x:Name="PasteActionMenuItem"
                               Header="{localization:LocalisedText Action.PasteAction}"
                               FontSize="16"
                               Click="PasteActionMenuItem_Click" />
                    <Separator></Separator>
                    <MenuItem x:Name="ImportActionMenuItem"
                              Header="{localization:LocalisedText Action.ImportActions}"
                              Click="ImportActionMenuItem_Click"
                              FontSize="16" />
                    <MenuItem Header="{localization:LocalisedText Action.ExportActions}"
                              FontSize="16">
                        <MenuItem x:Name="ExportAllActionMenuItem"
                                  Header="{localization:LocalisedText Action.ExportAllActions}"
                                  Click="ExportAllActionMenuItem_Click"
                                  FontSize="16"></MenuItem>
                        <MenuItem Header="{localization:LocalisedText Action.ExportSpecificActions}"
                                  Click="ExportEnableActionMenuItem_Click"
                                  FontSize="16"></MenuItem>
                    </MenuItem>
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True">
                    </StackPanel>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Height="85"
                          Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Column="1"
                                  IsChecked="{Binding Path=IsEnabled}"
                                  Click="ActionCheckBox_Click"
                                  HorizontalAlignment="Right" />
                        <TextBlock Grid.Column="0"
                                   TextWrapping="NoWrap"
                                   Text="{Binding ActionName}"
                                   Margin="5,25,0,0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Width="Auto" />
                        <TextBlock Grid.Column="0"
                                   TextWrapping="Wrap"
                                   Text="{Binding Description}"
                                   DockPanel.Dock="Top"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Width="Auto"
                                   Foreground="{StaticResource HighlightBrush}"
                                   Margin="5,45,0,0" />
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}"
                       BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                    <Setter Property="VerticalContentAlignment"
                            Value="Stretch" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        <Button x:Name="btnAddAction"
                Style="{DynamicResource MetroCircleButtonStyle}"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Height="50"
                Width="50"
                Margin="0,0,120,10"
                Click="btnAddAction_Click"
                Grid.Row="2"
                Grid.Column="1">
            <Rectangle Width="20"
                       Height="20">
                <Rectangle.Fill>
                    <VisualBrush Visual="{StaticResource Plus}" />
                </Rectangle.Fill>
            </Rectangle>
        </Button>
        <Button x:Name="cmdEdit"
                Style="{DynamicResource MetroCircleButtonStyle}"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Height="50"
                Width="50"
                Click="cmdEditAction_Click"
                Margin="0,0,65,10"
                Grid.Row="2"
                Grid.Column="1"
                IsEnabled="False">
            <Rectangle Width="20"
                       Height="20"
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Fill"
                                 Visual="{StaticResource appbar_page_edit}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
        <Button x:Name="cmdDelete"
                Style="{DynamicResource MetroCircleButtonStyle}"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Height="50"
                Width="50"
                Margin="0,0,10,10"
                Click="cmdDeleteAction_Click"
                Grid.Row="2"
                Grid.Column="1"
                IsEnabled="False">
            <Rectangle Width="18"
                       Height="20"
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Visual="{StaticResource appbar_delete}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
        <Button x:Name="MoveUpButton"
                Style="{DynamicResource MetroCircleButtonStyle}"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Height="50"
                Width="50"
                Margin="0,0,247,10"
                Grid.Row="2"
                Grid.Column="1"
                Click="MoveUpButton_Click"
                IsEnabled="False">
            <Rectangle Width="20"
                       Height="20"
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Visual="{StaticResource Chevron-Up}"
                                 Stretch="Uniform" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
        <Button x:Name="MoveDownButton"
                Style="{DynamicResource MetroCircleButtonStyle}"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Height="50"
                Width="50"
                Margin="0,0,192,10"
                Grid.Row="2"
                Grid.Column="1"
                Click="MoveDownButton_Click"
                IsEnabled="False">
            <Rectangle Width="20"
                       Height="20"
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Visual="{StaticResource Chevron-Down}"
                                 Stretch="Uniform" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
    </Grid>
</UserControl>